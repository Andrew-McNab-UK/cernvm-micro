include $(TOP)/config.mk
include config.mk

PARROT_BINARY = parrot-$(PARROT_STRONG_VERSION)/parrot_run
PARROT_BUILDPRODUCT = $(PARROT_SOURCETREE)/parrot/src/parrot_run
PARROT_STRIPPED = $(PARROT_BUILDPRODUCT)-stripped
PARROT_MAKEFILE = $(PARROT_SOURCETREE)/Makefile
PARROT_CONFIGURE = $(PARROT_SOURCETREE)/configure
PARROT_CONFIGURE_PATCHED = $(PARROT_SOURCETREE)/configure.patched
PARROT_CHECKOUT_SENTINEL = $(PARROT_SOURCETREE)/checkout-$(PARROT_TREEISH)

LIBCVMFS_INCLUDE = $(LIBCVMFS_SOURCETREE)/pickup/include/libcvmfs.h
LIBCVMFS_ARCHIVE = $(LIBCVMFS_SOURCETREE)/pickup/lib/libcvmfs.a
LIBCVMFS_BUILDPRODUCT = $(LIBCVMFS_SOURCETREE)/cvmfs/libcvmfs.a
LIBCVMFS_MAKEFILE = $(LIBCVMFS_SOURCETREE)/Makefile
LIBCVMFS_CMAKEFILE = $(LIBCVMFS_SOURCETREE)/CMakeLists.txt
LIBCVMFS_CHECKOUT_SENTINEL = $(LIBCVMFS_SOURCETREE)/checkout-$(LIBCVMFS_TREEISH)

all: $(PARROT_BINARY)

clean:
	rm -rf parrot-* libcvmfs-*

$(PARROT_BINARY): $(PARROT_STRIPPED)
	mkdir -p parrot-$(PARROT_STRONG_VERSION)
	cp $(PARROT_STRIPPED) $(PARROT_BINARY)

$(PARROT_STRIPPED): $(PARROT_BUILDPRODUCT)
	cp $(PARROT_BUILDPRODUCT) $(PARROT_STRIPPED)
	strip $(PARROT_STRIPPED)

$(PARROT_BUILDPRODUCT): $(PARROT_MAKEFILE) $(PARROT_SOURCETREE)/Makefile
	$(MAKE) -j4 -C $(PARROT_SOURCETREE)

$(PARROT_MAKEFILE): $(PARROT_CONFIGURE_PATCHED) $(LIBCVMFS_INCLUDE) $(LIBCVMFS_ARCHIVE)
	cd $(PARROT_SOURCETREE) && ./configure \
	  --with-cvmfs-path $$(pwd)/../$(LIBCVMFS_SOURCETREE)/pickup

$(PARROT_CONFIGURE_PATCHED): $(PARROT_CONFIGURE) $(PARROT_CHECKOUT_SENTINEL)
	cat $(PARROT_CONFIGURE) | sed -e 's/config_mysql_path=auto/config_mysql_path=no/' > $(PARROT_CONFIGURE_PATCHED)
	chmod +x $(PARROT_CONFIGURE_PATCHED)
	cp $(PARROT_CONFIGURE_PATCHED) $(PARROT_CONFIGURE)

$(PARROT_CONFIGURE): | $(PARROT_SOURCETREE)

$(PARROT_CHECKOUT_SENTINEL): | $(PARROT_SOURCETREE)
	cd $(PARROT_SOURCETREE) && git pull
	cd $(PARROT_SOURCETREE) && git checkout $(PARROT_TREEISH)
	touch $(PARROT_CHECKOUT_SENTINEL)

$(PARROT_SOURCETREE):
	git clone $(PARROT_GIT) $(PARROT_SOURCETREE)

$(LIBCVMFS_INCLUDE): $(LIBCVMFS_CHECKOUT_SENTINEL)
	mkdir -p $(LIBCVMFS_SOURCETREE)/pickup/include
	cp $(LIBCVMFS_SOURCETREE)/cvmfs/libcvmfs.h $(LIBCVMFS_INCLUDE)

$(LIBCVMFS_ARCHIVE): $(LIBCVMFS_BUILDPRODUCT)
	mkdir -p $(LIBCVMFS_SOURCETREE)/pickup/lib
	cp $(LIBCVMFS_SOURCETREE)/cvmfs/libcvmfs.a $(LIBCVMFS_ARCHIVE)

$(LIBCVMFS_BUILDPRODUCT): $(LIBCVMFS_MAKEFILE)
	$(MAKE) -j4 -C $(LIBCVMFS_SOURCETREE)

$(LIBCVMFS_MAKEFILE): $(LIBCVMFS_CMAKEFILE) $(LIBCVMFS_CHECKOUT_SENTINEL)
	cd $(LIBCVMFS_SOURCETREE) && cmake -DBUILD_SERVER=no .

$(LIBCVMFS_CMAKEFILE): | $(LIBCVMFS_SOURCETREE) 

$(LIBCVMFS_CHECKOUT_SENTINEL): | $(LIBCVMFS_SOURCETREE)
	cd $(LIBCVMFS_SOURCETREE) && git pull
	cd $(LIBCVMFS_SOURCETREE) && git checkout $(LIBCVMFS_TREEISH)
	touch $(LIBCVMFS_CHECKOUT_SENTINEL)

$(LIBCVMFS_SOURCETREE):
	git clone $(LIBCVMFS_GIT) $(LIBCVMFS_SOURCETREE)

